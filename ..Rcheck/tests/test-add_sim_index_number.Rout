
R version 3.4.1 (2017-06-30) -- "Single Candle"
Copyright (C) 2017 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(dplyr)

Attaching package: 'dplyr'

The following objects are masked from 'package:stats':

    filter, lag

The following objects are masked from 'package:base':

    intersect, setdiff, setequal, union

> library(vpc)
> library(testit)
> Sys.setenv("R_TESTS" = "")
> 
> ## Load the theophylline PK dataset
> obs <- Theoph
> colnames(obs) <- c("id", "wt", "dose", "time", "dv")
> obs <- obs %>%
+   dplyr::group_by(id) %>%
+   mutate(sex = round(runif(1))) # randomly assign a "sex" covariate
> sim <- sim_data(obs, # the design of the dataset
+                 model = function(x) { # the model
+                   pk_oral_1cmt (t = x$time, dose=x$dose * x$wt, ka = x$ka, ke = x$ke, cl = x$cl * x$wt)
+                 },
+                 error = list(additive = 0.1),
+                 theta = c(2.774, 0.0718, .0361),                 # parameter values
+                 omega_mat = c(0.08854,                           # specified as lower triangle by default;
+                               0.02421, 0.02241,                  # note: assumed that every theta has iiv, set to 0 if no iiv.
+                               0.008069, 0.008639, 0.02862),
+                 par_names = c("ka", "ke", "cl"),                 # link the parameters in the model to the thetas/omegas
+                 n = 500)
> 
> s <- add_sim_index_number(sim)
> h <- hist(s)
> assert("all simulated dataset-indices of equal length", length(unique(h$counts)) == 1)
> 
> proc.time()
   user  system elapsed 
  1.652   0.344   1.646 
